import { useState, useEffect } from 'preact/hooks';
import { Link } from 'preact-router';
import db from '../lib/db';

export default function Norms() {
  const [norms, setNorms] = useState([]);
  const [newArticle, setNewArticle] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ—Ä–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadNorms();
  }, []);

  const loadNorms = async () => {
    try {
      const normsList = await db.getAllNorms();
      console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ—Ä–º:', normsList);
      setNorms(normsList);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ—Ä–º:', error);
    }
  };

  const addNorm = async () => {
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞:', newArticle);
    
    if (newArticle.trim() === '') {
      console.log('–ü—É—Å—Ç–æ–π –∞—Ä—Ç–∏–∫—É–ª');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª
    const existingNorm = norms.find(norm => 
      norm.article.toLowerCase() === newArticle.trim().toLowerCase()
    );
    
    if (existingNorm) {
      alert('–¢–∞–∫–æ–π –∞—Ä—Ç–∏–∫—É–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –Ω–æ—Ä–º');
      return;
    }
    
    try {
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î...');
      await db.addNorm(newArticle.trim());
      console.log('–ê—Ä—Ç–∏–∫—É–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
      
      setNewArticle('');
      await loadNorms(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
      console.log('–°–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω');
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ—Ä–º—ã:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ—Ä–º—ã: ' + error.message);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      addNorm();
    }
  };

  const deleteNorm = async (id) => {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∞—Ä—Ç–∏–∫—É–ª –∏–∑ –±–∞–∑—ã?')) {
      try {
        // TODO: –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ deleteNorm –≤ db.js
        console.log('–£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞ —Å id:', id);
        await loadNorms();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ—Ä–º—ã:', error);
      }
    }
  };

  return (
    <div className="min-h-screen bg-gray-900 p-4">
      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é */}
      <div className="mb-6">
        <Link href="/">
          <button className="px-4 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 transition-colors">
            ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </Link>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h1 className="text-2xl font-bold text-white mb-6">–ë–∞–∑–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ (–ù–æ—Ä–º—ã)</h1>

      {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞—Ä—Ç–∏–∫—É–ª–∞ */}
      <div className="bg-gray-800 rounded-lg shadow-sm border border-gray-700 p-4 mb-6">
        <div className="flex gap-3 items-center">
          <input
            type="text"
            value={newArticle}
            onInput={(e) => setNewArticle(e.target.value)}
            onKeyPress={handleKeyPress}
            className="flex-1 px-4 py-2 border border-gray-600 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 outline-none transition-all bg-gray-700 text-white"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ö—Ç637)"
          />
          <button 
            onClick={addNorm}
            className="px-6 py-2 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors whitespace-nowrap"
          >
            –î–æ–±–∞–≤–∏—Ç—å
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ */}
      <div className="bg-gray-800 rounded-lg shadow-sm border border-gray-700 overflow-hidden">
        <div className="bg-gray-700 px-4 py-3 border-b border-gray-600">
          <h2 className="text-lg font-semibold text-white">
            –°–ø–∏—Å–æ–∫ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ {norms.length > 0 && `(${norms.length})`}
          </h2>
        </div>
        
        {norms.length === 0 ? (
          <div className="p-8 text-center text-gray-400">
            <div className="text-3xl mb-2">üìã</div>
            <p className="text-lg font-medium mb-1">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤</p>
            <p>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª —Å –ø–æ–º–æ—â—å—é —Ñ–æ—Ä–º—ã –≤—ã—à–µ</p>
          </div>
        ) : (
          <div className="divide-y divide-gray-700">
            {norms.map((norm, index) => (
              <div key={norm.id} className="px-4 py-3 hover:bg-gray-750 transition-colors">
                <div className="flex justify-between items-center">
                  <span className="text-lg font-medium text-white">{norm.article}</span>
                  <button 
                    onClick={() => deleteNorm(norm.id)}
                    className="px-3 py-1 text-red-400 hover:bg-red-900 hover:text-red-300 rounded-lg transition-colors"
                    title="–£–¥–∞–ª–∏—Ç—å –∞—Ä—Ç–∏–∫—É–ª"
                  >
                    üóëÔ∏è
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <div className="mt-4 text-sm text-gray-500 text-center">
        üí° –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–≥–∞—Ç—å –æ–ø–µ—á–∞—Ç–æ–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤
      </div>
    </div>
  );
}